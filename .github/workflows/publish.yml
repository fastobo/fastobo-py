name: Publish to PyPI

on:
  push:
    tags:
      - v*.*.*

jobs:

  wheel-linux-aarch64:
    name: Build Linux wheels (Aarch64)
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all
    - name: Build manylinux wheels
      uses: pypa/cibuildwheel@v2.11.3
      env:
        CIBW_ARCHS: aarch64
        CIBW_BEFORE_ALL: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh /dev/stdin -y"
        CIBW_BUILD_VERBOSITY: 2
        CIBW_ENVIRONMENT: CARGO_NET_GIT_FETCH_WITH_CLI=true
      with:
        output-dir: dist
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/*

  wheel-linux-x86_64:
    name: Build Linux wheels (x86-64)
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Build manylinux wheels
      uses: pypa/cibuildwheel@v2.11.3
      env:
        CIBW_ARCHS: x86_64
        CIBW_BEFORE_ALL: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh /dev/stdin -y"
        CIBW_BUILD_VERBOSITY: 2
        CIBW_ENVIRONMENT: CARGO_NET_GIT_FETCH_WITH_CLI=true
      with:
        output-dir: dist
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/*

  wheel-macos-x86_64:
    name: Build MacOS wheels (x86-64)
    runs-on: macOS-11
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Build manylinux wheels
      uses: pypa/cibuildwheel@v2.11.3
      env:
        CIBW_ARCHS: x86_64
        CIBW_BEFORE_ALL: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh /dev/stdin -y"
        CIBW_BUILD_VERBOSITY: 2
        CIBW_ENVIRONMENT: CARGO_NET_GIT_FETCH_WITH_CLI=true
      with:
        output-dir: dist
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/*

  wheel-macos-aarch64:
    name: Build MacOS wheels (Aarch64)
    runs-on: macOS-11
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: aarch64-apple-darwin
    - name: Build manylinux wheels
      uses: pypa/cibuildwheel@v2.11.3
      env:
        CIBW_ARCHS: arm64
        CIBW_BEFORE_ALL: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh /dev/stdin -y"
        CIBW_BUILD_VERBOSITY: 2
        CIBW_ENVIRONMENT: CARGO_NET_GIT_FETCH_WITH_CLI=true
      with:
        output-dir: dist
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/*

  wheel-win32-x86_64:
    name: Build Windows wheels (x86-64)
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Build manylinux wheels
      uses: pypa/cibuildwheel@v2.11.3
      env:
        CIBW_ARCHS: AMD64
        CIBW_BUILD_VERBOSITY: 2
      with:
        output-dir: dist
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/*

  upload:
    environment: PyPI
    runs-on: ubuntu-latest
    name: Upload
    needs:
    - wheel-linux-aarch64
    - wheel-linux-x86_64
    - wheel-macos-aarch64
    - wheel-macos-x86_64
    - wheel-win32-x86_64
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: "3.10"
    - name: Install CI requirements
      run: python -m pip install -U -r ci/requirements.txt
    - name: Build source tarball with vendored sources
      run: python setup.py vendor sdist
    - name: Download built wheels
      uses: actions/download-artifact@v2
      with:
        name: wheels
        path: dist
    - name: Publish distributions to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true

  release:
    environment: GitHub Releases
    runs-on: ubuntu-latest
    if: "!contains(github.ref, 'rc')"
    name: Release
    needs: upload
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Release a Changelog
      uses: rasmus-saks/release-a-changelog-action@v1.0.1
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
