name: Publish to PyPI

on:
  push:
    tags:
      - v*.*.*

jobs:

  wheel-linux:
    runs-on: ubuntu-latest
    name: Build Linux wheels(${{ matrix.image }})
    strategy:
      matrix:
        image: [quay.io/pypa/manylinux2014_x86_64, quay.io/pypa/manylinux2014_aarch64]
        python-version: [cp37-cp37m, cp38-cp38, cp39-cp39, cp310-cp310]
    env:
      pyo3-python: /opt/python/${{ matrix.python-version }}/bin/python
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Set up QEMU
      if: matrix.image == 'quay.io/pypa/manylinux2014_aarch64'
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build manylinux wheels
      uses: addnab/docker-run-action@v2
      with:
        image: ${{ matrix.image }}
        options: -v ${{ github.workspace }}:/io -e TERM=$TERM
        shell: bash
        run: |
          ${{ env.pyo3-python }} -m pip install -U -r /io/ci/requirements.txt
          ${{ env.pyo3-python }} -m pip wheel -vv /io -w /tmp
          for whl in /tmp/*.whl; do ${{ env.pyo3-python }} -m auditwheel repair $whl -w /io/dist; done
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
          name: wheels
          path: dist/*

  wheel-osx:
    runs-on: macos-latest
    name: Build OSX wheels
    strategy:
      matrix:
        python-version:
        - "3.7"
        - "3.8"
        - "3.9"
        - "3.10"
        - pypy-3.7
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build package
      run: python -m pip install -U -r ci/requirements.txt
    - name: Build wheel distribution
      run: python setup.py bdist_wheel
      env:
        MACOSX_DEPLOYMENT_TARGET: 10.9
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
          name: wheels
          path: dist/*

  upload:
    environment: PyPI
    runs-on: ubuntu-latest
    name: Upload
    needs:
    - wheel-linux
    - wheel-osx
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: "3.10"
    - name: Install CI requirements
      run: python -m pip install -U -r ci/requirements.txt
    - name: Build source tarball with vendored sources
      run: python setup.py vendor sdist
    - name: Download built wheels
      uses: actions/download-artifact@v2
      with:
        name: wheels
        path: dist
    - name: Publish distributions to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true

  release:
    environment: GitHub Releases
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: Release
    needs: upload
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Release a Changelog
      uses: rasmus-saks/release-a-changelog-action@v1.0.1
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
