name: Test

on:
  - push
  - pull_request

jobs:

  test_linux:
    name: Test (Linux)
    runs-on: ubuntu-latest
    env:
      OS: Linux
    strategy:
      matrix:
        include:
        - python-version: 3.6
          python-release: v3.6
          python-impl: CPython
        - python-version: 3.7
          python-release: v3.7
          python-impl: CPython
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: "3.10"
          python-release: v3.10
          python-impl: CPython
        - python-version: pypy-3.6
          python-release: v3.6
          python-impl: PyPy
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Rust stable
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Update CI requirements
      run: python -m pip install -U -r ci/requirements.txt
    - name: Build Rust extension
      run: python setup.py build_ext --inplace --debug
    - name: Test Rust extension
      run: python -m unittest discover -vv
      if: ${{ matrix.python-release != 'v3.6' }}

  test_linux_aarch64:
    name: "Test (Linux, Aarch64)"
    strategy:
      matrix:
        python-version: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39, cp310-cp310]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      pyo3-python: /opt/python/${{ matrix.python-version }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Test Rust extension
      uses: addnab/docker-run-action@v2
      with:
        image: ${{ env.img }}
        options: --rm -v ${{ github.workspace }}:/io:rw --workdir=/io
        shell: bash
        run: |
          ${{ env.pyo3-python }} -m pip install -U -r ci/requirements.txt
          ${{ env.pyo3-python }} setup.py build_ext --inplace --debug
          if [ ${{ matrix.python-version }} != 'cp36-cp36m' ]; then
              ${{ env.pyo3-python }} -m unittest discover -vv
          fi

  test_osx:
    name: Test (OSX)
    runs-on: macos-latest
    env:
      OS: OSX
    strategy:
      matrix:
        include:
        - python-version: 3.6
          python-release: v3.6
          python-impl: CPython
        - python-version: 3.7
          python-release: v3.7
          python-impl: CPython
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: "3.10"
          python-release: "v3.10"
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Rust stable
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Update CI requirements
      run: python -m pip install -U -r ci/requirements.txt
    - name: Build Rust extension
      run: python setup.py build_ext --inplace --debug
    - name: Test Rust extension
      run: python -m unittest discover -vv
      if: ${{ matrix.python-release != 'v3.6' }}

  coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Setup Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - name: Measure code coverage
      uses: actions-rs/tarpaulin@v0.1
      with:
        version: '0.16.0'
        args: '-v --out Xml --ciserver github-actions'
    - name: Upload coverage statistics
      uses: codecov/codecov-action@v1
